## Agent have:
- private calendar with already planned meetings
- contact list (subset of all agents)

## Agent can:
- ask participants for a new meeting
- Change his preference for a slot
- lock his Slot
- ask to participant if a slot is free
- not reply when asked for a slot
- refuse to participate to a meeting after being invited

## Agent cannot:
- Cancel or reschedule a Slot once locked
- Be eliminated from a meeting
- remove other participants from a meeting without their consent

## Must be:
- all the meetings should be scheduled
- Maximize the global preference (NB: SIMPLEX)
	Note: maybe use a simplex to show the theoratical results and compare with what we got from negociations phase ?


## Phases:
(Dont forget that slot preferences and availability can change during the process)
- Init calendar for each agents
INVITATION
- 1+ agent propose a meeting
- Invit contacts
NEGOCIATION
- Ask for every one's preferences
- Compute the best slot according to everyone
CONFIRMATION
(get confirmation from every agents)
- lock it if possible
- warn every invited people that one participant cannot participate anymore (UNLOCK SLOT)
- repeat NEGOCIATION if one participant slot is no longer avaible or preferences changed
END

## Agent type
?

## Behaviour:
- Cyclic with steps like in Lab
- FSMBehaviour ?

## Naming Scheme
## Content language, basic concepts, templates for message exchange
?
